# day05
# 시각화 도구

1. Matlotlib: 기본 그래프 도구
    ***** 예제 ex01.py를 보기
    1-1. 선 그래프
        - 연속하는 데이터 값들을 직선 또는 곡선으로 연결하여 데이터 값 사이의 관계를 나타냄
        - 시계열 데이터(일정한 시간동안 수집 된 일련의 순차적으로 정해진 데이터 셋의 집합)와 같이
            연속적인 값의 변화와 패턴을 파악하는 데 적합
        
        < 선 그래프의 꾸미기 옵션 >
            'o'                         : 선 그래프가 아니라 점 그래프로 표현
            marker='o'                  : 마커 모양(예:'o', '+', '*', '.')
            markerfacecolor='green'     : 마커 배경색
            markersize=10               : 마커 크기
            color='olive'               : 선의 색
            linewidth=2                 : 선의 두께
            label='서울 -> 경기'        : 라벨 지정

    1-2. 면적 그래프(area plot)
        plot(kind='area')

        - 각 열의 데이터를 선 그래프로 구현하는데, 선 그래프와 x축 사이의 공간에 색이 입혀짐
        - 각 열의 패턴과 함께 열 전체의 합계가 어떻게 변하는지 파악할 수 있음
        - 선 그래프의 확장 개념으로 누적 선 그래프(stacked line plot)라고 부르기도 함
        - stacked=False 옵션을 지정하면 각 열의 선 그래프들이 누적되지 않고 서로 겹치도록 표시됨

    1-3. 막대 그래프
        * 수직그래프: plot(kind='bar')
        * 수평그래프: plot(kind='barh)

        - 데이터 값의 크기에 비례하여 높이를 갖는 직사각형 막대로 표현
        - 세로형과 가로형 두 종류가 있음. 단, 세로형의 경우 정보 제공 측면에서 선 그래프와 차이가 없음
        - 시간적으로 차이가 나는 두 점에서 데이터 값의 차이를 잘 설명. 시계열 데이터 표현하는데 적합

    < 보조 축 활용하기(2축 그래프 그리기) >
        ex17.py 참고

    1-4. 히스토그램
        plot(kind='hist', bins=구간수)

        - 변수가 하나인 단변수 데이터의 빈도수를 그래프로 표현
        - x축을 같은 크기의 여러 구간으로 나누고 각 구간에 속하는 데이터 값의 개수(빈도)를 y축에 표시

    1-5. 산점도(scatter plot)
        plot(kind='scatter, x=x축에 위치할 변수(데이터프레임의 열), y=y축에 놓을 변수)

        - 서로 다른 두 변수 사이의 관계를 나타냄
        - 이때 각 변수는 연속되는 값을 가짐
        - 일반적으로 정수형(int64) 또는 실수형(float64) 값
        * 선 그래프를 그릴 때 plot 메소드에 'o' 옵션을 사용하면 사실상 산점도와 동일

        < 버블 차트 >
            ex20.py 보기
            - 제 3변수를 추가해서 점의 크기 또는 색상으로 표현 가능
            - 값의 크기에 따라 점의 크기를 값에 따라 다르게 표시

        < 그래프를 그림 파일로 저장하는 방법 >
            matplotlib.pyplot.savefig(*파일명*, [transperent=False/True])

    1-6. 파이 차트(pie chart)
        plot(kind='pie')
        - 원을 파이 조각처럼 나누어서 표현한 그래프

    1-7. 박스 플롯(boxplot)
        ex23.py 보기
        - 범주형 데이터의 분포를 파악하는데 적합

    참고 ] 파이썬 그래프 갤러리
        https://python-graph-gallery.com