# day08

# 데이터프레임의 다양한 응용

1. 함수 매핑
    시리즈 또는 데이터프레임의 개별 원소를 특정 함수에 일대일 대응시키는 과정

    1-1. 개별 원소에 함수 매핑
        1) 시리즈 원소에 함수 매핑
            Series객체.apply(매핑 함수)

        2) 데이터프레임 원소에 함수 매핑
            DataFrame 객체.applymap(매핑 함수)
    
    1-2. 시리즈 객체에 함수 매핑
        1) 데이터프레임의 각 열에 함수 매핑
            - 모든 열을 하나씩 분리하여 매핑 함수의 인자로 각 열(시리즈)이 전달됨.
            DataFrame 객체.apply(매핑 함수, axis=0)

        2) 데이터프레임의 각 행에 함수 매핑
            - 데이터프레임의 각 행을 매핑 함수의 인자로 전달
            - 데이터프레임의 행 인덱스가 매핑 결과로 반환되는 시리즈의 인덱스가 됨
            DataFrame 객체.apply(매핑함수, axis=1)

    1-3. 데이터프레임 객체에 함수 매핑
        - 이때 사용하는 함수가 반환하는 리턴값에 따라 pipe() 메소드가 반환하는 객체의 종류가 결정된다.
        - 데이터프레임을 반환하는 경우, 시리즈를 반환하는 경우, 개별 값을 반환하는 경우로 나뉨
        DataFrame 객체.pipe(매핑 함수)

--------------------------------------------------------------------------------------------------
2. 열 재구성
    2-1. 열 순서 변경
        DataFrame 객체[재구성한 열 이름의 리스트]

    2-2. 열 분리 ===> ex08.py
        하나의 열이 여러 가지 정보를 담고 있을 때, 각 정보를 서로 분리해서 사용하는 경우가 많음
        예를 들어, 사람의 이름이 들어 있는 열을 '성'과 '이름'을 구분하는 것
        또는 '연', '월', '일'을 구분하여 3개의 열을 만드는 것
        
        Series객체.str.get(인덱스)

3. 필터링
    특정 조건식을 만족하는 원소만 따로 추출하는 개념

    3-1. 불린 인덱싱    ===> ex09.py
        조건식을 적용하여 각 원소가 조건을 만족하는지 여부를 참과 거짓 값으로 표시하여 불린 시리즈를 만듦
        
        DataFrame 객체[불린 시리즈]

    3-2. isin() 메소드 활용
        데이터프레임의 열에 isin() 메소드를 적용하면 특정 값을 가진 행들을 따로 추출할 수 있다.
        이때 isin() 메소드에 데이터프레임의 열에서 추출하려는 값들로 만든 리스트를 전달한다.

        DataFrame의 열 객체.isin(추출 값의 리스트)


4. 데이터프레임 합치기
    4-1. 데이터프레임 연결  ===> ex11.py
        pandas.concat(데이터프레임의 리스트)